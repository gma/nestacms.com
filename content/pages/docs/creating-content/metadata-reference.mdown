Categories: docs/creating-content:-1
Summary: A full list of the Nesta metadata, which allows you to organise your site into categories and convert simple web pages into blog posts.

# Metadata reference

As you've probably noticed, Nesta doesn't use a database. There is
therefore no obvious place to store information *about* a web page, such
as the date that it was published.

Nesta solves this problem by allowing you to specify metadata at the top
of your Markdown file. You just write the name of the metadata field, a
colon, a space, and then the value of the metadata. 

Here's a contrived example:

    Summary: This is a blog post about carrots. Juicy orange carrots!
    Read more: Find out about this superb vegetable
    Date: 6 Oct 2009

There's not much to go wrong here, but bear in mind that:

 1. Each piece of metadata should be *entered on a single line*, and
 2. there can be *no blank lines* between metadata fields.

The first blank line is assumed to separate the metadata from the
content. You'll typically follow your metadata with the page's main
heading:

    Date: 6 Oct 2009
    
    # Carrots
    
    ...

Without further ado, here's a full list of the Nesta metadata.

## Atom ID

An alternative to RSS, [Atom feeds][atom] can alert your readers to new
articles that you publish on your site. Each item in an Atom feed must
be assigned a globally unique identifier, which allows feed reader
software to determine whether or not an article has already been read by
the user.

[atom]: http://en.wikipedia.org/wiki/Atom_(standard)

Nesta determines Atom IDs for new articles automatically ([using these
guidelines](http://diveintomark.org/archives/2004/05/28/howto-atom-id)),
so you don't normally need to choose the Atom ID yourself.

It is useful to set the Atom ID if you are:

 1. Moving an article (i.e. any page with a date) to a new URL. You
    should set it to the article's Atom ID at the previous location.
 2. Importing content from another CMS or blogging system to the IDs
    that were generated by your previous software, which ensures that
    feed readers do not redisplay any old content to your users.

Example:

    Atom ID: tag:localhost,2009-03-08:/articles/my-article

## Description meta tag

If you define `Description` your HTML page will have a description meta
tag. The contents of this tag are often displayed by search engines to
give a potential visitor a good feel for the contents of the page, and
help to indicate the relevancy of your web page to a search engine. Try
to set your description text to one or two short, relevant sentences.

Example:

    Description: A short summary of the British breakfast.
    
    # British breakfasts
    
    ...

## Categories

Pages can be listed on relevant category pages. Assuming you want your
page or article to appear on your Git, Ruby and Rails category pages
(whose filenames are `git.mdown` and `ruby.mdown`), you could do this:

    Categories: git, ruby, ruby/rails

When multiple pages are listed in the same category they will be sorted
by their headings, unless you also specify a priority. You set the
priority of a page within each of its categories separately:

    Categories: git:5, ruby, ruby/rails:-1

When a category page is rendered the pages with the highest priority are
listed first. The default priority is 0.

Note that priorities don't have any effect when used on an article (i.e.
a page with a date -- see below). Articles are always sorted
chronologically, with the most recent one at the top of the page.

## Date

Sets the date on which an article was published. You can use any form
that is understood by Ruby's `DateTime.parse` method. It's pretty
liberable in what it accepts -- all of these examples work:

    Date: 23 July 2008
    Date: July 23 2008
    Date: 14:13, 23 July 2008
    Date: 23 July 2008 14:13
    Date: 23 July 2008 2:13pm

You must set the date on an article if you want it to appear in the Atom
feed (the most recent 10 articles are included, in reverse chronological
order). Note that Nesta only displays the date on which an article was
published, not the time. You can still use the time to control the sort
order of multiple articles that are published on the same day, however.

If you set the date to some time in the future your article won't be
published until that time is reached (thanks to [Glenn Gillen ][glenn]
for the patch).

[glenn]: http://glenngillen.com/ "Glenn Gillen"

## Keywords meta tag

The `Keywords` metadata sets the HTML keywords meta tag for your page.
Keywords were historically used to indicate to search engines which
topics a page is about. Google doesn't pay much attention to the
keywords meta tag these days, but some other search engines still do.

Example:

    Keywords: breakfast, cholesterol, heart bypass
    
    # British breakfasts
    
    ...

## Layout

Each page in a Nesta web site is rendered using two files that describe
the HTML markup; the layout template and the page template. The layout
usually contains HTML that is common to every page on your site (e.g.
header, side bar), while the page template will contain HTML that is
common to a certain group of pages on the site. Nesta places no
restrictions on you here though; you can create as many separate layouts
or page templates as you wish.

You can control which layout is used to render a page by specifying the
`Layout` metadata (also see the docs for the `Template` metadata below).

Example:

    Layout: signup
    
    # Sign-up now before it's too late!
    
    ...

You'll need to create a layout template in your `views` directory, and
call `yield` somewhere within it to render the page specific template
inside the layout. See the [default layout][layout] for an example.    

[layout]: https://github.com/gma/nesta/blob/master/views/layout.haml

## Read more

When the summary of an article (see below) is displayed on the home
page, or on a category page, there is a link underneath the summary that
points to the rest of the post. By default this link contains the text
"Continue reading", but you can override it if you prefer.

Example:

    Read more: Read more about this stunning topic

## Summary

The summary text allows you to include a brief precis of your article on
your home page or category page. If you don't define a summary the
entire article will be displayed instead, which for short articles may
be just what you want.

As blank lines are not allowed within (or between) metadata fields you
cannot insert multiple paragraphs into your summary by inserting blank
lines. You can however insert the "new line" character (`\n`) which will
insert paragraph breaks into your summary field.

Example:

    Summary: First paragraph.\nSecond paragraph.
    
    # Main heading
    
    First paragraph.
    
    Second paragraph, which is different to the summary's version.

Summaries aren't automatically prepended to the body copy, so can be
quite independent from the opening paragraphs of your article.

The summary is not used in the site's Atom feed; the complete article is
included in the feed instead.

## Template

Each page in a Nesta web site can be rendered with a different HTML
template. By default the `page` template is used, which is defined in
the `page.haml` file in your `views` directory.

If your site has several different types of page, each of which occurs
multiple times, it can be useful to create separate templates with which
to render them. Create more templates in your views directory and then
use them on a page by setting the `Template` metadata.

Example:

    Layout: shop
    Template: product
    
    # Our flugelbinders
    
    ...

As you can see, it's also possible to control which layout is used with
the `Layout` metadata (which is described in its own section above).
